version: '3.8'

services:
  # --- Backend API Service with Hot-Reloading ---
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile # Use the standard Dockerfile, not the .hf one
    container_name: auraquant_backend_dev
    # Mount the local 'app' directory into the container's 'app' directory
    volumes:
      - ./backend/app:/app/app
    env_file:
      - ./backend/.env
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql+asyncpg://auraquant_user:strong_password_here@postgres_dev:5432/auraquant_db
      - DEBUG=True # Ensure debug mode is on for development
    ports:
      - "8000:8000"
    depends_on:
      - postgres_dev
      - redis_dev
    networks:
      - auraquant_dev_net

  # --- PostgreSQL Database for Development ---
  postgres_dev:
    image: postgres:15-alpine
    container_name: auraquant_postgres_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=auraquant_user
      - POSTGRES_PASSWORD=strong_password_here
      - POSTGRES_DB=auraquant_db
    ports:
      - "5433:5432" # Map to host port 5433 to avoid conflicts with a local install
    networks:
      - auraquant_dev_net

  # --- Redis for Development ---
  redis_dev:
    image: redis:7-alpine
    container_name: auraquant_redis_dev
    ports:
      - "6379:6379"
    networks:
      - auraquant_dev_net

  # --- Celery Worker with Hot-Reloading ---
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: auraquant_celery_worker_dev
    # The 'watchfiles' package enables auto-reloading for Celery
    command: watchfiles --filter python "celery -A app.celery_worker.celery_app worker --loglevel=info"
    volumes:
      - ./backend/app:/app/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis_dev
      - postgres_dev
    networks:
      - auraquant_dev_net

# Define named volumes to persist data
volumes:
  postgres_dev_data:

# Define a custom network for our services
networks:
  auraquant_dev_net:
    driver: bridge