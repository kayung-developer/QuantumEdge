# docker-compose.yml (in the project root)

version: '3.8'

services:
  # Backend FastAPI Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quantedge_backend
    restart: unless-stopped
    env_file:
      - .env.prod # Load production environment variables
    volumes:
      - ./logs:/app/logs # Persist logs outside the container
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy # Wait for the DB to be ready
    networks:
      - quantedge_net

  # Frontend React Service (served by Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quantedge_frontend
    restart: unless-stopped
    ports:
      - "3000:80" # Map host port 3000 to container port 80 (Nginx)
    networks:
      - quantedge_net

  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: quantedge_db
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quantedge_net

  # Nginx Reverse Proxy (The entrypoint to the application)
  nginx:
    image: nginx:1.25-alpine
    container_name: quantedge_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      # Add volumes for SSL certificates in production
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    networks:
      - quantedge_net

volumes:
  postgres_data:

networks:
  quantedge_net:
    driver: bridge